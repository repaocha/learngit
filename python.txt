请定义一个函数quadratic(a,b,c),接收三个参数，返回一元二次方程:
     ax^2+bx+c=0
的两个解。
提示：计算平方根可以调用math.sqrt（）函数.

#!/usr/bin/env python
# -*- coding: utf-8 -*-
import math
def quadratic(a,b,c):
     if not isinstance(a,(int,float)):
        raise TypeError('a is not a number')
     if not isinstance(b,(int,float)):
        raise TypeError('b is not a number')
     if not isinstance(c,(int,float)):
        raise TypeError('c is not a number')
     p=b*b-4*a*c
     if p>=0 and a!=0:
        x1=(-b-math.sqrt(p))/(2*a)
        x2=(-b+math.sqrt(p))/(2*a)
        return x1,x2
     else:
        return('wrong number!')

汉诺塔的移动可以用递归函数非常简单地实现。

请编写move(n, a, b, c)函数，它接收参数n，表示3个柱子A、B、C中
第1个柱子A的盘子数量，然后打印出把所有盘子从A借助B移动到C的方法.

		def move(n,a,b,c):
     if n==1:
        print('%s --> %s' %(a,c))
     else:
        move(n-1,a,c,b)
        print('%s --> %s' %(a,c))
        move(n-1,b,a,c)

>>>move(3,'a','b','c')

a --> c
a --> b
c --> b
a --> c
b --> a
b --> c
a --> c